const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
require('dotenv').config({ path: './config.env' });

const connectDB = require('../config/database');
const User = require('../models/User');
const Category = require('../models/Category');
const Product = require('../models/Product');

const seedData = async () => {
  try {
    await connectDB();
    console.log('üîÑ Connected to database');

    // Clear existing data
    await User.deleteMany({});
    await Category.deleteMany({});
    await Product.deleteMany({});
    console.log('üßπ Cleared existing data');

    // Create categories
    const categories = await Category.insertMany([
      {
        name: '√Åo s∆° mi',
        description: '√Åo s∆° mi nam n·ªØ cao c·∫•p',
        slug: 'ao-so-mi',
        isActive: true
      },
      {
        name: 'V√°y',
        description: 'V√°y d√†i, v√°y ng·∫Øn th·ªùi trang',
        slug: 'vay',
        isActive: true
      },
      {
        name: 'Qu·∫ßn',
        description: 'Qu·∫ßn jean, qu·∫ßn t√¢y, qu·∫ßn short',
        slug: 'quan',
        isActive: true
      },
      {
        name: 'Ph·ª• ki·ªán',
        description: 'T√∫i x√°ch, gi√†y d√©p, ƒë·ªìng h·ªì',
        slug: 'phu-kien',
        isActive: true
      }
    ]);
    console.log('‚úÖ Created categories');

    // Create admin user
    const hashedPassword = await bcrypt.hash('admin123456', 10);
    const adminUser = await User.create({
      name: 'Admin VHA Atelier',
      email: 'admin@vha-atelier.com',
      password: hashedPassword,
      role: 'admin',
      isActive: true,
      isEmailVerified: true
    });
    console.log('‚úÖ Created admin user');

    // Create sample users
    const users = await User.insertMany([
      {
        name: 'Nguy·ªÖn VƒÉn A',
        email: 'user1@example.com',
        password: await bcrypt.hash('password123', 10),
        role: 'user',
        isActive: true,
        isEmailVerified: true
      },
      {
        name: 'Tr·∫ßn Th·ªã B',
        email: 'user2@example.com',
        password: await bcrypt.hash('password123', 10),
        role: 'user',
        isActive: true,
        isEmailVerified: true
      }
    ]);
    console.log('‚úÖ Created sample users');

    // Create sample products
    const products = await Product.insertMany([
      {
        name: '√Åo s∆° mi nam cao c·∫•p',
        description: '√Åo s∆° mi nam ch·∫•t li·ªáu cotton cao c·∫•p, form d√°ng chu·∫©n',
        price: 500000,
        originalPrice: 600000,
        stock: 50,
        category: categories[0]._id,
        brand: 'VHA Atelier',
        sizes: ['S', 'M', 'L', 'XL'],
        colors: ['Tr·∫Øng', 'Xanh', 'ƒêen'],
        images: [
          {
            url: 'https://res.cloudinary.com/your-cloud/image/upload/v1/products/shirt1.jpg',
            alt: '√Åo s∆° mi nam'
          }
        ],
        tags: ['th·ªùi trang', 'cao c·∫•p', 'nam'],
        isActive: true,
        isFeatured: true,
        isOnSale: true
      },
      {
        name: 'V√°y d√†i n·ªØ sang tr·ªçng',
        description: 'V√°y d√†i n·ªØ thi·∫øt k·∫ø sang tr·ªçng, ph√π h·ª£p m·ªçi d·ªãp',
        price: 800000,
        originalPrice: 1000000,
        stock: 30,
        category: categories[1]._id,
        brand: 'VHA Atelier',
        sizes: ['S', 'M', 'L'],
        colors: ['ƒêen', 'ƒê·ªè', 'Xanh'],
        images: [
          {
            url: 'https://res.cloudinary.com/your-cloud/image/upload/v1/products/dress1.jpg',
            alt: 'V√°y d√†i n·ªØ'
          }
        ],
        tags: ['th·ªùi trang', 'n·ªØ', 'sang tr·ªçng'],
        isActive: true,
        isFeatured: true,
        isOnSale: true
      },
      {
        name: 'Qu·∫ßn jean nam',
        description: 'Qu·∫ßn jean nam ch·∫•t li·ªáu denim cao c·∫•p',
        price: 600000,
        stock: 40,
        category: categories[2]._id,
        brand: 'VHA Atelier',
        sizes: ['28', '30', '32', '34'],
        colors: ['Xanh', 'ƒêen'],
        images: [
          {
            url: 'https://res.cloudinary.com/your-cloud/image/upload/v1/products/jeans1.jpg',
            alt: 'Qu·∫ßn jean nam'
          }
        ],
        tags: ['jean', 'nam', 'casual'],
        isActive: true,
        isFeatured: false,
        isOnSale: false
      },
      {
        name: 'T√∫i x√°ch n·ªØ cao c·∫•p',
        description: 'T√∫i x√°ch n·ªØ thi·∫øt k·∫ø tinh t·∫ø, ch·∫•t li·ªáu da th·∫≠t',
        price: 1200000,
        stock: 20,
        category: categories[3]._id,
        brand: 'VHA Atelier',
        sizes: ['One Size'],
        colors: ['ƒêen', 'N√¢u', 'ƒê·ªè'],
        images: [
          {
            url: 'https://res.cloudinary.com/your-cloud/image/upload/v1/products/bag1.jpg',
            alt: 'T√∫i x√°ch n·ªØ'
          }
        ],
        tags: ['t√∫i x√°ch', 'n·ªØ', 'cao c·∫•p'],
        isActive: true,
        isFeatured: true,
        isOnSale: false
      }
    ]);
    console.log('‚úÖ Created sample products');

    console.log('üéâ Data seeding completed successfully!');
    console.log(`üìä Created:`);
    console.log(`   - ${categories.length} categories`);
    console.log(`   - ${users.length + 1} users (including admin)`);
    console.log(`   - ${products.length} products`);

  } catch (error) {
    console.error('‚ùå Error seeding data:', error);
  } finally {
    mongoose.connection.close();
    console.log('üîå Database connection closed');
  }
};

seedData();
